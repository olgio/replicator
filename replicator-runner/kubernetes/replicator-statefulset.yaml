apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: replicator
  labels:
    app: replicator
spec:
  replicas: 3
  serviceName: "replicator-grpc-service"
  selector:
    matchLabels:
      app: replicator
  template:
    metadata:
      labels:
        app: replicator
    spec:
      #      affinity:
      #        podAntiAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #            - labelSelector:
      #                matchExpressions:
      #                  - key: app
      #                    operator: In
      #                    values:
      #                      - replicator
      #              topologyKey: topology.kubernetes.io/zone
      #          preferredDuringSchedulingIgnoredDuringExecution:
      #            - podAffinityTerm:
      #                labelSelector:
      #                  matchExpressions:
      #                    - key: app
      #                      operator: In
      #                      values:
      #                        - replicator
      #                topologyKey: topology.kubernetes.io/zone
      #              weight: 100
      volumes:
        - name: google-cloud-key
          secret:
            secretName: replicator-key
      containers:
        - name: replicator
          image: olgnet/replicator:latest
          imagePullPolicy: Always
          command: [ "java" ]
          args: [ "-Xmx1400M", "-jar", "/app.jar", "--protocol", "ATLAS", "--nodes", "replicator-0.replicator-grpc-service.default.svc.cluster.local:6545,replicator-1.replicator-grpc-service.default.svc.cluster.local:6545,replicator-2.replicator-grpc-service.default.svc.cluster.local:6545" ]
          ports:
            - containerPort: 8000
            - containerPort: 6545
          volumeMounts:
            - mountPath: /var/secrets/google
              name: google-cloud-key
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
          resources:
            limits:
              cpu: 700m
              memory: "1536Mi"
            requests:
              cpu: 100m
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 10